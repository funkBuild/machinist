{"version":3,"sources":["images/model_icon.svg","images/operations_icon.svg","images/simulate_icon.svg","images/export_icon.svg","models/wasm.worker.js","models/wasm.sim.worker.js","models/worker.js","models/scene_manager.js","models/path.js","models/operation.js","models/model.js","models/path_manager.js","components/common/Button.js","components/common/TabbedSection.js","components/Sidebar/ModelMenu.js","components/Sidebar/Operations/OperationList.js","components/Sidebar/Operations/OperationProperties/NumberField.js","components/Sidebar/Operations/OperationProperties/ToolField.js","components/Sidebar/Operations/OperationProperties/SweeplineProperties.js","components/Sidebar/Operations/OperationProperties.js","components/Sidebar/OperationsMenu.js","models/sim_worker.js","models/sim_model.js","models/sim_manager.js","components/Sidebar/SimulateMenu.js","components/Sidebar/ExportMenu.js","components/Sidebar/Sidebar.js","components/PendingOperations/PendingOperations.js","components/WebglDisplay/WebglDisplay.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Worker","onReady","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","worker","_createWorker","_onReady","_cmdId","_callbacks","onmessage","_onMessage","bind","assertThisInitialized","Promise","res","rej","model","create","sendCommand","modelBuffer","buffer","triangles","WasmWorker","reply","message","data","type","event","emit","params","id","action","_this2","postMessage","terminate","EventEmitter","OrbitControls","require","scene_manager","SceneManager","createClass","key","value","canvas","console","dir","clock","THREE","scene","camera","window","innerWidth","innerHeight","position","x","y","z","lookAt","light","set","add","light2","light3","light4","addGrid","renderer","antialias","controls","domElement","animate","aspect","updateProjectionMatrix","setSize","render","requestAnimationFrame","xDimension","arguments","length","undefined","yDimension","divisionStep","subDivisions","gridGroup","thinLineMaterial","color","linewidth","thickLineMaterial","subDivisionInterval","geometry","vertices","push","line","meshBuffer","addAttribute","computeVertexNormals","material","ambient","specular","shininess","mesh","rotation","Math","PI","minVector","setFromObject","min","remove","attributes","array","fill","needsUpdate","pathId","pathName","concat","selectedObject","getObjectByName","toolpath","pathGroup","name","currentPathType","pathType","i","thisPath","start","nextColor","Path","pathBuffer","lineCount","lineBuffer","Float32Array","colorBuffer","indices","n","pathBufOffset","bufOffset","setIndex","vertexColors","toThreeObject","DEFAULT_TYPE","DEFAULTS","sweepline","resolution","boundryOffset","direction","tool","diameter","stepoverPercent","zDepthMax","zDepthStart","zDepthStep","count","Operation","_ref","properties","path","PathManager","removePath","createWithModel","result","destroy","show","Model","filename","dimensions","showModel","modelFile","file","path_manager","operations","find","a","operation","forEach","clearOperations","removeModel","Button","className","props","enabled","react_default","createElement","onClick","text","Component","defaultProps","TabbedSection","state","open","setState","toggleHeader","children","ModelMenu","on","forceUpdate","e","target","files","setModel","clearModel","src","renderContent","components_common_TabbedSection","components_common_Button","onChange","accept","OperationList","addNewOperation","selectOperation","selectedOperation","onOperationSelect","listContent","createNew","map","selected","NumberField","field","Number","minValue","max","maxValue","step","stepValue","suffix","fields","ToolField","OperationProperties_NumberField","onFieldChange","options","SweeplineProperties","assign","hasBeenUpdated","keys","save","generate","propertyName","update","_this3","updateFieldValue","option","toUpperCase","_this4","Operations_OperationProperties_ToolField","updateToolValue","dropdownFieldFor","buttonContent","_this5","OperationProperties","propertiesContent","getOperation","OperationProperties_SweeplineProperties","OperationsMenu","Sidebar_Operations_OperationList","openOperation","Sidebar_Operations_OperationProperties","SimWorker","WasmSimWorker","toolPosition","updateInterval","floor","stock","SubObject","paddedVertexes","vertexAttribute","setDynamic","vertexArray","SimModel","subObjects","fullArray","polyGroup","updateGroup","sim_manager","_EventEmitter","_class","inherits","_initialize","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","size","createForSimulation","simWorker","sent","getFullPolygons","updateModelEvent","polygonBuffer","stop","_x","apply","_runOperation","_callee2","_context2","runOperationSimulation","_x2","_getFullPolygons","_callee3","polygonUpdate","_context3","getPolygons","updateModel","SimulateMenu","SimManager","initialize","runOperation","test","ExportMenu","Sidebar","currentMenu","onHeaderClick","style","backgroundColor","currentMenuElement","components_Sidebar_ModelMenu","components_Sidebar_OperationsMenu","components_Sidebar_SimulateMenu","components_Sidebar_ExportMenu","PendingOperations","completedOperations","removeCompletedTimer","addOperation","stopOperation","clearTimeout","op","filter","setTimeout","cancelOperation","active","operationElement","WebglDisplay","onresize","resizeCanvas","init","canvasElement","width","height","offsetWidth","offsetHeight","onWindowResize","ref","element","App","components_Sidebar_Sidebar","components_WebglDisplay_WebglDisplay","components_PendingOperations_PendingOperations","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAA,WACA,WAAAG,OAAoBF,EAAAC,EAAuB,oDCD3CH,EAAAC,QAAA,WACA,WAAAG,OAAoBF,EAAAC,EAAuB,6fCEtBC,cAqBnB,SAAAA,EAAYC,GAAQ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QAEKI,OAASP,EAAKQ,gBACnBR,EAAKS,SAAWV,EAChBC,EAAKU,OAAS,EACdV,EAAKW,WAAa,GAElBX,EAAKO,OAAOK,UAAYZ,EAAKa,WAAWC,KAAhBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KARNA,6EAnBlB,OAAO,IAAIgB,QAAQ,SAACC,EAAKC,GACV,IAAIpB,EAAOmB,qFAICE,yFACRrB,EAAOsB,uBAAtBb,kBAEEA,EAAOc,YACX,WACA,CACEC,YAAaH,EAAMI,OACnBC,UAAWL,EAAMK,4CAIdjB,0JAeP,OAAO,IAAIkB,uCAGFC,GACT,IAAIC,EAAUD,EAAME,KAED,SAAhBD,EAAQE,KAKRF,EAAQG,MACT3B,KAAK4B,KAAKJ,EAAQG,MAAOH,EAAQK,QAIhCL,EAAQM,IAAM9B,KAAKQ,WAAWgB,EAAQM,MACvC9B,KAAKQ,WAAWgB,EAAQM,IAAIN,UACrBxB,KAAKQ,WAAWgB,EAAQM,KAX/B9B,KAAKM,SAASN,0CAeN+B,EAAQF,GAAO,IAAAG,EAAAhC,KACzB,OAAO,IAAIa,QAAQ,SAACC,EAAKC,GACvB,IAAIe,IAAOE,EAAKzB,OAChByB,EAAKxB,WAAWsB,GAAMhB,EACtBkB,EAAK5B,OAAO6B,YAAY,CAACH,KAAIC,SAAQF,+CAKvC7B,KAAKI,OAAO8B,mBAhEoBC,YCF9BC,EAAgBC,EAAQ,IAGfC,EAAA,wBAAAC,IAAAzC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,GAAA,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAAyC,EAAA,EAAAE,IAAA,OAAAC,MAAA,SACRC,GACHC,QAAQC,IAAIF,GACZ3C,KAAK8C,MAAQ,IAAIC,QAEjB/C,KAAKgD,MAAQ,IAAID,QACnB/C,KAAKiD,OAAS,IAAIF,oBAAyB,GAAIG,OAAOC,WAAaD,OAAOE,YAAa,EAAG,KACxFpD,KAAKiD,OAAOI,SAASC,EAAI,IACzBtD,KAAKiD,OAAOI,SAASE,EAAI,IACzBvD,KAAKiD,OAAOI,SAASG,EAAI,IACzBxD,KAAKiD,OAAOQ,OAAO,IAAIV,UAAc,EAAG,EAAG,IAE3C,IAAIW,EAAQ,IAAIX,aAAkB,SAAU,EAAG,GAC/CW,EAAML,SAASM,IAAI,IAAK,IAAK,GAC7B3D,KAAKgD,MAAMY,IAAKF,GAEhB,IAAIG,EAAS,IAAId,aAAkB,SAAU,EAAG,GAChDc,EAAOR,SAASM,KAAM,IAAK,IAAK,GAChC3D,KAAKgD,MAAMY,IAAKC,GAEhB,IAAIC,EAAS,IAAIf,aAAkB,SAAU,EAAG,GAChDe,EAAOT,SAASM,IAAK,GAAI,IAAK,KAC9B3D,KAAKgD,MAAMY,IAAKE,GAEhB,IAAIC,EAAS,IAAIhB,aAAkB,SAAU,EAAG,GAChDgB,EAAOV,SAASM,IAAK,GAAI,KAAM,KAC/B3D,KAAKgD,MAAMY,IAAKG,GAEH,IAAIhB,aAAkB,SAAU,EAAG,GACzCM,SAASM,IAAK,EAAG,IAAK,GAC7B3D,KAAKgD,MAAMY,IAAKG,GAEhB/D,KAAKgE,UAELhE,KAAKiE,SAAW,IAAIlB,gBAAoB,CAAEJ,SAAQuB,WAAW,IAC/DlE,KAAKmE,SAAW,IAAI/B,EAAepC,KAAKiD,OAAQjD,KAAKiE,SAASG,YAE5DpE,KAAKqE,YArCM,CAAA5B,IAAA,cAAAC,MAAA,eAAAD,IAAA,iBAAAC,MAAA,WA6CX1C,KAAKiD,OAAOqB,OAASpB,OAAOC,WAAaD,OAAOE,YAChDpD,KAAKiD,OAAOsB,yBAEZvE,KAAKiE,SAASO,QAAStB,OAAOC,WAAYD,OAAOE,eAhDtC,CAAAX,IAAA,UAAAC,MAAA,WAoDX1C,KAAKyE,WApDM,CAAAhC,IAAA,SAAAC,MAAA,WAwDXgC,sBAAuB1E,KAAKyE,OAAO9D,KAAKX,OAExCA,KAAKiE,SAASQ,OAAQzE,KAAKgD,MAAOhD,KAAKiD,UA1D5B,CAAAR,IAAA,UAAAC,MAAA,WA4EX,IAf+E,IAAzEiC,EAAyEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5D,IAAKG,EAAuDH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1C,IAAKI,EAAqCJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,GAAIK,EAAkBL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAIxEM,EAAY,IAAInC,QAChBoC,EAAmB,IAAIpC,oBAAyB,CACnDqC,MAAO,QACPC,UAAW,KAERC,EAAoB,IAAIvC,oBAAyB,CACpDqC,MAAO,QACPC,UAAW,IAERE,EAAsBP,EAAeC,EAEjC3B,EAAE,EAAGA,GAAKqB,EAAYrB,GAAKiC,EAAoB,CACrD,IAAIC,EAAW,IAAIzC,WACnByC,EAASC,SAASC,KAAK,IAAI3C,UAAeO,EAAG,EAAG,IAChDkC,EAASC,SAASC,KAAK,IAAI3C,UAAeO,EAAG,EAAGyB,IAEhD,IAAIY,EAAO,IAAI5C,OAAYyC,EAAYlC,EAAI0B,GAAgB,EAAIM,EAAoBH,GACnFD,EAAUtB,IAAI+B,GAGhB,IAAI,IAAIpC,EAAE,EAAGA,GAAKwB,EAAYxB,GAAKgC,EAAoB,CACrD,IAAIC,EAAW,IAAIzC,WACnByC,EAASC,SAASC,KAAK,IAAI3C,UAAe,EAAG,EAAGQ,IAChDiC,EAASC,SAASC,KAAK,IAAI3C,UAAe4B,EAAY,EAAGpB,IAEzD,IAAIoC,EAAO,IAAI5C,OAAYyC,EAAYjC,EAAIyB,GAAgB,EAAIM,EAAoBH,GACnFD,EAAUtB,IAAI+B,GAGhB3F,KAAKgD,MAAMY,IAAIsB,KA9FJ,CAAAzC,IAAA,YAAAC,MAAA,SAiGHkD,GACR,IAAIJ,EAAW,IAAIzC,iBAEnByC,EAASK,aAAc,WAAY,IAAI9C,kBAAuB6C,EAAY,IAC1EJ,EAASM,uBAET,IAAIC,EAAW,IAAIhD,uBAA4B,CAAEiD,QAAS,OAAUZ,MAAO,QAAUa,SAAU,QAAUC,UAAW,MACpHlG,KAAKmG,KAAO,IAAIpD,OAAYyC,EAAUO,GACtC/F,KAAKmG,KAAKC,SAAS9C,GAAK+C,KAAKC,GAAK,EAElC,IACIC,GADM,IAAIxD,QAAayD,cAAexG,KAAKmG,MAC3BM,IACpBzG,KAAKmG,KAAK9C,SAASM,KAAK,EAAI4C,EAAUjD,GAAI,EAAIiD,EAAUhD,GAAI,EAAIgD,EAAU/C,GAE1ExD,KAAKgD,MAAMY,IAAI5D,KAAKmG,QA/GT,CAAA1D,IAAA,cAAAC,MAAA,WAmHX1C,KAAKgD,MAAM0D,OAAO1G,KAAKmG,aAChBnG,KAAKmG,OApHD,CAAA1D,IAAA,cAAAC,MAAA,SAuHDkD,GAGV5F,KAAKmG,KAAKX,SAASmB,WAAWtD,SAASuD,MAAMC,KAAK,GAClD7G,KAAKmG,KAAKX,SAASmB,WAAWtD,SAASuD,MAAMjD,IAAIiC,GAEjD5F,KAAKmG,KAAKX,SAASmB,WAAWtD,SAASyD,aAAc,EACrD9G,KAAKmG,KAAKX,SAASM,yBA9HR,CAAArD,IAAA,aAAAC,MAAA,SAiIFqE,GACT,IAAIC,EAAQ,SAAAC,OAAYF,GACpBG,EAAiBlH,KAAKgD,MAAMmE,gBAAgBH,GAEhDhH,KAAKgD,MAAM0D,OAAQQ,KArIR,CAAAzE,IAAA,WAAAC,MAAA,SAwIJqE,EAAQK,GACf,IAAIJ,EAAQ,SAAAC,OAAYF,GACpBM,EAAY,IAAItE,QACpBsE,EAAUC,KAAON,EAMjB,IAJA,IAAIjB,EAAW,IAAIhD,oBAAwB,CAAEqC,MAAO,MAChDI,EAAW,IAAIzC,WACfwE,EAAkBH,EAAS,GAAGI,SAE1BC,EAAI,EAAGA,EAAIL,EAASvC,OAAQ4C,IAAK,CACvC,IAAIC,EAAWN,EAASK,GAGxB,GAFAjC,EAASC,SAASC,KAAK,IAAI3C,UAAc2E,EAASC,MAAMrE,EAAGoE,EAASC,MAAMnE,EAAGkE,EAASC,MAAMpE,IAExFgE,GAAmBG,EAASF,SAAU,CACxC,IAAI7B,EAAO,IAAI5C,OAAWyC,EAAUO,GACpCsB,EAAUzD,IAAI+B,GAEd4B,EAAkBG,EAASF,SAC3BhC,EAAW,IAAIzC,WACf,IAAI6E,EAA+B,GAAnBL,EAAuB,IAAW,MAClDxB,EAAW,IAAIhD,oBAAwB,CAAEqC,MAAOwC,IAEhDpC,EAASC,SAASC,KAAK,IAAI3C,UAAc2E,EAASC,MAAMrE,EAAGoE,EAASC,MAAMnE,EAAGkE,EAASC,MAAMpE,KAGhG,IAAIoC,EAAO,IAAI5C,OAAWyC,EAAUO,GACpCsB,EAAUzD,IAAI+B,GAEd3F,KAAKgD,MAAMY,IAAIyD,OApKJ9E,EAAA,ICDXT,EAAK,EAqDM+F,aAlDb,SAAAA,EAAYC,GAAYhI,OAAAC,EAAA,EAAAD,CAAAE,KAAA6H,GACtB7H,KAAK8H,WAAaA,EAClB9H,KAAK+H,UAAYD,EAAWjD,OAAS,EACrC7E,KAAK8B,GAAKA,gEAQV,IAJA,IAAIkG,EAAa,IAAIC,aAAa,EAAIjI,KAAK+H,WACvCG,EAAc,IAAID,aAAa,EAAIjI,KAAK+H,WACxCI,EAAU,GAENC,EAAE,EAAGA,EAAIpI,KAAK+H,UAAWK,IAAI,CAChCA,EAAI,GAAGD,EAAQzC,KAAK0C,EAAI,EAAGA,GAE9B,IAAIC,EAAgB,EAAED,EAClBE,EAAY,EAAEF,EAMlB,OAJAJ,EAAWM,GAAatI,KAAK8H,WAAWO,EAAc,GACtDL,EAAWM,EAAU,GAAKtI,KAAK8H,WAAWO,EAAc,GACxDL,EAAWM,EAAU,GAAKtI,KAAK8H,WAAWO,EAAc,GAEhDrI,KAAK8H,WAAWO,IACtB,KAAK,EACHH,EAAYI,GAAa,IACzBJ,EAAYI,EAAU,GAAK,IAC3BJ,EAAYI,EAAU,GAAK,IAC3B,MACF,KAAK,EACHJ,EAAYI,GAAa,EACzBJ,EAAYI,EAAU,GAAK,IAC3BJ,EAAYI,EAAU,GAAK,GAKjC,IAAI9C,EAAW,IAAIzC,iBACnByC,EAAS+C,SAAUJ,GACnB3C,EAASK,aAAc,WAAY,IAAI9C,kBAAuBiF,EAAY,IAC1ExC,EAASK,aAAc,QAAS,IAAI9C,kBAAuBmF,EAAa,IAExE,IAAInC,EAAW,IAAIhD,oBAAyB,CAAEyF,aAAczF,iBAE5D,OAAO,IAAIA,eAAoByC,EAAUO,kCAIzCxD,EAAaS,MAAMY,IAAI5D,KAAKyI,0BC/C1BC,EAAe,YACfC,EAAW,CACfC,UAAW,CACTC,WAAY,GACZC,cAAe,EACfC,UAAW,IACXC,KAAM,CACJC,SAAU,EACVpE,OAAQ,IAEVqE,gBAAiB,GACjBC,UAAW,EACXC,YAAa,GACbC,WAAY,KAIZC,EAAQ,EA+BGC,aA5Bb,SAAAA,EAAAC,GAAgC,IAAnB9H,EAAmB8H,EAAnB9H,KAAM+H,EAAaD,EAAbC,WAAa3J,OAAAC,EAAA,EAAAD,CAAAE,KAAAuJ,GAC9BvJ,KAAK8B,KAAOwH,EACZtJ,KAAK0B,KAAOA,GAAQgH,EACpB1I,KAAKyJ,WAAaA,GAAcd,EAAS3I,KAAK0B,MAC9C1B,KAAK0J,KAAO,mLAIZC,EAAY/H,KAAK,yBAA0B5B,MAC3CuC,EAAaqH,WAAW5J,KAAK8B,aAEVnC,EAAOkK,gBAAgBF,EAAY3I,qBAAlDZ,kBACeA,EAAOc,YAAY,eAAgBlB,KAAKyJ,mBAAvDK,SAEJ1J,EAAO2J,UAEP/J,KAAK0J,KAAO,IAAI7B,EAAKiC,EAAOjI,OAAOiG,YACnC9H,KAAK0J,KAAKM,OAEVL,EAAY/H,KAAK,wBAAyB5B,2IAK1CuC,EAAaqH,WAAW5J,KAAK8B,aC7CZmI,aAcnB,SAAAA,EAAYpI,GAAQ/B,OAAAC,EAAA,EAAAD,CAAAE,KAAAiK,GAClBjK,KAAKoB,OAASS,EAAOV,YACrBnB,KAAKkK,SAAWrI,EAAOqI,SACvBlK,KAAKqB,UAAYQ,EAAOR,UACxBrB,KAAKmK,WAAatI,EAAOsI,WAEzB5H,EAAa6H,UAAUpK,KAAKoB,wGAnBViJ,2FACC1K,EAAOsB,uBAAtBb,kBACeA,EAAOc,YACxB,aACA,CACEoJ,KAAMD,kBAHNP,SAOJ1J,EAAO2J,4BACA,IAAIE,EAAMH,EAAOjI,gHC4Bb0I,EAAA,gBArCb,SAAAZ,IAAa,IAAA9J,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2J,IACX9J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6J,GAAAxJ,KAAAH,QAEKwK,WAAa,GAClB3K,EAAKmB,MAAQ,KAJFnB,4EAOAiC,GACX,OAAO9B,KAAKwK,WAAWC,KAAK,SAAAC,GAAC,OAAIA,EAAE5I,IAAMA,8CAIzC,IAAI6I,EAAY,IAAIpB,EAAU,IAG9B,OAFAvJ,KAAKwK,WAAW9E,KAAMiF,GAEfA,2EAGMN,mFACMJ,EAAMhJ,OAAOoJ,UAAhCrK,KAAKgB,aAELhB,KAAK4B,KAAK,2JAIV5B,KAAKwK,WAAWI,QAAQ,SAAAD,GAAS,OAAIA,EAAUZ,YAC/C/J,KAAKwK,WAAa,wCAIlBxK,KAAK6K,kBACL7K,KAAKgB,MAAQ,KAEbuB,EAAauI,qBAlCS3I,MCDpB4I,0LAKK,IAAAlL,EAAAG,KACHgL,EAAS,SAAA/D,OAAajH,KAAKiL,MAAMC,QAAU,GAAK,aAEpD,OACEC,EAAAT,EAAAU,cAAA,OACEJ,UAAYA,EACZK,QAAS,WAAQxL,EAAKoL,MAAMC,SAAWrL,EAAKoL,MAAMI,YAEhDrL,KAAKiL,MAAMK,aAbAC,cAAfR,EACGS,aAAe,CACpBN,SAAS,GAiBEH,QCWAU,qBA7Bb,SAAAA,EAAYR,GAAM,IAAApL,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyL,IAChB5L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2L,GAAAtL,KAAAH,KAAMiL,KAEDS,MAAQ,CAAEC,MAAM,GAHL9L,8EAOhBG,KAAK4L,SAAS,CAAED,MAAO3L,KAAK0L,MAAMC,wCAG3B,IAAA3J,EAAAhC,KAC8BA,KAAK0L,MAAMC,KAEhD,OACER,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,iBACbG,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,eAAeK,QAAS,kBAAMrJ,EAAK6J,iBAChDV,EAAAT,EAAAU,cAAA,YAAQpL,KAAKiL,MAAMK,MACnBH,EAAAT,EAAAU,cAAA,YAAQpL,KAAK0L,MAAMC,KAAO,SAAM,WAEhC3L,KAAK0L,MAAMC,MACXR,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,iBACXhL,KAAKiL,MAAMa,kBAtBGP,cCoFbQ,qMAhFM,IAAAlM,EAAAG,KACjB2J,EAAYqC,GAAG,aAAc,kBAAMnM,EAAKoM,yFAG3BC,gFACT5B,EAAO4B,EAAEC,OAAOC,MAAM,YACpBzC,EAAY0C,SAAS/B,8OAI3BX,EAAY2C,aACZtM,KAAKiM,iJAwDL,OACEd,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,sBACbG,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,cACbG,EAAAT,EAAAU,cAAA,OAAKmB,IAAMlK,EAAQ,MADrB,SAKErC,KAAKwM,qDA5DM,IAAAxK,EAAAhC,KACjB,GAAG2J,EAAY3I,MAAM,CACnB,IAAMA,EAAQ2I,EAAY3I,MAE1B,OACEmK,EAAAT,EAAAU,cAAA,WACED,EAAAT,EAAAU,cAACqB,EAAD,CAAenB,KAAK,SAClBH,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,mBACbG,EAAAT,EAAAU,cAAA,WACED,EAAAT,EAAAU,cAAA,wBACAD,EAAAT,EAAAU,cAAA,YAAQpK,EAAMkJ,WAEhBiB,EAAAT,EAAAU,cAAA,WACED,EAAAT,EAAAU,cAAA,wBACAD,EAAAT,EAAAU,cAAA,YAAQpK,EAAMK,YAGhB8J,EAAAT,EAAAU,cAAA,YAAUJ,UAAU,mBAClBG,EAAAT,EAAAU,cAAA,4BAEAD,EAAAT,EAAAU,cAAA,WACED,EAAAT,EAAAU,cAAA,iBACAD,EAAAT,EAAAU,cAAA,YAAQpK,EAAMmJ,WAAW7G,EAAzB,QAEF6H,EAAAT,EAAAU,cAAA,WACED,EAAAT,EAAAU,cAAA,iBACAD,EAAAT,EAAAU,cAAA,YAAQpK,EAAMmJ,WAAW5G,EAAzB,QAEF4H,EAAAT,EAAAU,cAAA,WACED,EAAAT,EAAAU,cAAA,iBACAD,EAAAT,EAAAU,cAAA,YAAQpK,EAAMmJ,WAAW3G,EAAzB,SAIJ2H,EAAAT,EAAAU,cAAA,WACED,EAAAT,EAAAU,cAACsB,EAAD,CAAQpB,KAAK,QAAQD,QAAS,kBAAMrJ,EAAKsK,oBAOnD,OACEnB,EAAAT,EAAAU,cAACqB,EAAD,CAAenB,KAAK,SAClBH,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,cACbG,EAAAT,EAAAU,cAAA,SAAO1J,KAAK,OAAOiL,SAAW3M,KAAK2M,SAAShM,KAAKX,MAAQ4M,OAAO,kBA5DpDrB,cC0CTsB,6LAzCX,IAAIlC,EAAYhB,EAAYmD,kBAE5B9M,KAAK+M,gBAAgBpC,EAAU7I,4CAGjBkL,GACdhN,KAAKiL,MAAMgC,kBAAkBD,oCAqBtB,IAAAnN,EAAAG,KACP,OACEmL,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,iBACbG,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,iBACXhL,KAAKkN,aAET/B,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,mBACbG,EAAAT,EAAAU,cAACsB,EAAD,CAAQpB,KAAK,MAAMD,QAAS,kBAAMxL,EAAKsN,qDAzB9B,IAAAnL,EAAAhC,KACf,OAAO2J,EAAYa,WAAW4C,IAAK,SAAAzC,GACjC,IAAI0C,EAAW1C,EAAU7I,KAAOE,EAAKiJ,MAAM+B,kBAE3C,OACE7B,EAAAT,EAAAU,cAAA,OACEJ,UAAW,aAAeqC,EAAW,YAAc,IACnD5K,IAAKkI,EAAU7I,GAAIuJ,QAAS,kBAAMrJ,EAAK+K,gBAAgBpC,EAAU7I,MAEjEqJ,EAAAT,EAAAU,cAAA,QAAMJ,UAAU,UAAWL,EAAUjJ,MACrCyJ,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,wBArBGO,cCiBb+B,mLApBJ,IAAAzN,EAAAG,KACP,OACEmL,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,iBACbG,EAAAT,EAAAU,cAAA,YAAQpL,KAAKiL,MAAMsC,MAAMjG,MACzB6D,EAAAT,EAAAU,cAAA,YACED,EAAAT,EAAAU,cAAA,SACE1J,KAAK,SACLgB,MAAQ1C,KAAKiL,MAAMvI,MACnBiK,SAAU,SAAAT,GAAC,OAAIrM,EAAKoL,MAAM0B,SAASa,OAAOtB,EAAEC,OAAOzJ,SACnD+D,IAAKzG,KAAKiL,MAAMsC,MAAME,SACtBC,IAAK1N,KAAKiL,MAAMsC,MAAMI,SACtBC,KAAM5N,KAAKiL,MAAMsC,MAAMM,YAEzB1C,EAAAT,EAAAU,cAAA,QAAMJ,UAAU,cAAehL,KAAKiL,MAAMsC,MAAMO,iBAdhCvC,aCGpBwC,SAAS,CACb9E,SAAU,CACR3B,KAAM,WACN5F,KAAM,SACN+L,SAAU,GACVI,UAAW,IACXC,OAAQ,MAEVjJ,OAAQ,CACNyC,KAAM,SACN5F,KAAM,SACN+L,SAAU,GACVI,UAAW,IACXC,OAAQ,QA8BGE,uNArBJ,IAAAnO,EAAAG,KACP,OACEmL,EAAAT,EAAAU,cAAA,YAAUJ,UAAU,aAClBG,EAAAT,EAAAU,cAAA,sBAEAD,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,iBACbG,EAAAT,EAAAU,cAAA,4BACAD,EAAAT,EAAAU,cAAA,cAEED,EAAAT,EAAAU,cAAA,2BACAD,EAAAT,EAAAU,cAAA,6BAIJD,EAAAT,EAAAU,cAAC6C,EAAD,CAAaV,MAAQQ,EAAO9E,SAAWvG,MAAQ1C,KAAKiL,MAAMjC,KAAKC,SAAW0D,SAAU,SAAAjK,GAAK,OAAI7C,EAAKoL,MAAMiD,cAAc,WAAYxL,MAClIyI,EAAAT,EAAAU,cAAC6C,EAAD,CAAaV,MAAQQ,EAAOlJ,OAASnC,MAAQ1C,KAAKiL,MAAMjC,KAAKnE,OAAS8H,SAAU,SAAAjK,GAAK,OAAI7C,EAAKoL,MAAMiD,cAAc,SAAUxL,cApB5G6I,aCHlBwC,EAAS,CACblF,WAAY,CACVvB,KAAM,aACN5F,KAAM,SACN+L,SAAU,IACVE,SAAU,EACVE,UAAW,IACXC,OAAQ,MAEVhF,cAAe,CACbxB,KAAM,iBACN5F,KAAM,SACN+L,SAAU,EACVK,OAAQ,MAEV/E,UAAW,CACTzB,KAAM,YACN6G,QAAS,CAAC,IAAK,MAEjBjF,gBAAiB,CACf5B,KAAM,WACN5F,KAAM,SACN+L,SAAU,EACVE,SAAU,IACVE,UAAW,EACXC,OAAQ,KAEV3E,UAAW,CACT7B,KAAM,eACN5F,KAAM,SACN+L,SAAU,EACVK,OAAQ,MAEV1E,YAAa,CACX9B,KAAM,gBACN5F,KAAM,SACN+L,SAAU,EACVK,OAAQ,MAEVzE,WAAY,CACV/B,KAAM,mBACN5F,KAAM,SACN+L,SAAU,IACVK,OAAQ,OAiGGM,cAvFb,SAAAA,EAAYnD,GAAM,IAAApL,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoO,IAChBvO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsO,GAAAjO,KAAAH,KAAMiL,KAEDS,MAAQ5L,OAAOuO,OAClB,CAAEC,gBAAgB,GAClBzO,EAAKoL,MAAMN,UAAUlB,YALP5J,sEASZ,IAAAmC,EAAAhC,KACaF,OAAOyO,KAAKR,GAClBnD,QAAQ,SAAAnI,GAAST,EAAKiJ,MAAMN,UAAUlB,WAAWhH,GAAOT,EAAK0J,MAAMjJ,KAE9EzC,KAAK4L,SAAS,CAAE0C,gBAAgB,uCAIhCtO,KAAKwO,OAELxO,KAAKiL,MAAMN,UAAU8D,SAASzO,KAAKiL,MAAMN,UAAU7I,4CAGrC4M,EAAchM,GAC5B,IAAIiM,EAAS,CAAEL,gBAAgB,EAAMtF,KAAMhJ,KAAK0L,MAAM1C,MACtD2F,EAAO3F,KAAK0F,GAAgBhM,EAE5B1C,KAAK4L,SAAS+C,4CAGCD,EAAchM,GAC7B,IAAIiM,EAAS,CAAEL,gBAAgB,GAC/BK,EAAOD,GAAgBhM,EAEvB1C,KAAK4L,SAAS+C,4CAGCD,GAAa,IAAAE,EAAA5O,KACtBuN,EAAQQ,EAAOW,GAErB,OACEvD,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,iBACbG,EAAAT,EAAAU,cAAA,YAAQmC,EAAMjG,MACd6D,EAAAT,EAAAU,cAAA,YACED,EAAAT,EAAAU,cAAA,UACE1I,MAAO1C,KAAK0L,MAAMgD,GAClB/B,SAAU,SAAAT,GAAC,OAAI0C,EAAKC,iBAAiBH,EAAcxC,EAAEC,OAAOzJ,SAE1D6K,EAAMY,QAAQf,IAAK,SAAC0B,EAAQrH,GAC3B,OAAO0D,EAAAT,EAAAU,cAAA,UAAQ1I,MAAQoM,EAASrM,IAAMgF,GAAMqH,EAAOC,qDAkBvD,IAAAC,EAAAhP,KACSA,KAAKiL,MAAMN,UAE3B,OACEQ,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,iBACbG,EAAAT,EAAAU,cAAC6D,EAAD,CAAWjG,KAAOhJ,KAAK0L,MAAM1C,KAAOkF,cAAe,SAACX,EAAO7K,GAAR,OAAkBsM,EAAKE,gBAAgB3B,EAAO7K,MAEjGyI,EAAAT,EAAAU,cAAC6C,EAAD,CAAaV,MAAQQ,EAAOlF,WAAanG,MAAO1C,KAAK0L,MAAM7C,WAAY8D,SAAU,SAAAjK,GAAK,OAAIsM,EAAKH,iBAAiB,aAAcnM,MAC5H1C,KAAKmP,iBAAiB,aACxBhE,EAAAT,EAAAU,cAAC6C,EAAD,CAAaV,MAAQQ,EAAOjF,cAAgBpG,MAAO1C,KAAK0L,MAAM5C,cAAe6D,SAAU,SAAAjK,GAAK,OAAIsM,EAAKH,iBAAiB,gBAAiBnM,MACvIyI,EAAAT,EAAAU,cAAC6C,EAAD,CAAaV,MAAQQ,EAAO7E,gBAAkBxG,MAAO1C,KAAK0L,MAAMxC,gBAAiByD,SAAU,SAAAjK,GAAK,OAAIsM,EAAKH,iBAAiB,kBAAmBnM,MAC7IyI,EAAAT,EAAAU,cAAC6C,EAAD,CAAaV,MAAQQ,EAAO3E,YAAc1G,MAAO1C,KAAK0L,MAAMtC,YAAauD,SAAU,SAAAjK,GAAK,OAAIsM,EAAKH,iBAAiB,cAAenM,MACjIyI,EAAAT,EAAAU,cAAC6C,EAAD,CAAaV,MAAQQ,EAAO5E,UAAYzG,MAAO1C,KAAK0L,MAAMvC,UAAWwD,SAAU,SAAAjK,GAAK,OAAIsM,EAAKH,iBAAiB,YAAanM,MAC3HyI,EAAAT,EAAAU,cAAC6C,EAAD,CAAaV,MAAQQ,EAAO1E,WAAa3G,MAAO1C,KAAK0L,MAAMrC,WAAYsD,SAAU,SAAAjK,GAAK,OAAIsM,EAAKH,iBAAiB,aAAcnM,MAE5H1C,KAAKoP,qDAxBM,IAAAC,EAAArP,KACjB,OACEmL,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,mBACbG,EAAAT,EAAAU,cAACsB,EAAD,CAAQpB,KAAK,OAAOD,QAAS,kBAAMgE,EAAKb,QAAQtD,QAAUlL,KAAK0L,MAAM4C,iBACrEnD,EAAAT,EAAAU,cAACsB,EAAD,CAAQpB,KAAK,WAAWD,QAAS,kBAAMgE,EAAKZ,sBA9DlBlD,aCpCnB+D,0LAfX,OAAmC,MAAhCtP,KAAKiL,MAAM+B,kBAEV7B,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,uBACbG,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,WAAf,gCAKFG,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,uBACXhL,KAAKuP,6DArBb,IAAI5E,EAAYhB,EAAY6F,aAAaxP,KAAKiL,MAAM+B,mBAEpD,OAAOrC,EAAUjJ,MACf,IAAK,YACH,OAAOyJ,EAAAT,EAAAU,cAACqE,EAAD,CAAqB9E,UAAYA,YANdY,cCkCnBmE,qBA/Bb,SAAAA,EAAYzE,GAAM,IAAApL,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0P,GAChB7P,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4P,GAAAvP,KAAAH,KAAMiL,IAEN,IAAI+B,EAAoBrD,EAAYa,WAAW3F,OAAS,EAAI8E,EAAYa,WAAW,GAAG1I,GAAK,KAH3E,OAIhBjC,EAAK6L,MAAQ,CAACsB,qBAJEnN,6EAOJmN,GACZhN,KAAK4L,SAAS,CAACoB,uDAGR,IAAAhL,EAAAhC,KACP,OACEmL,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,2BACbG,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,cACbG,EAAAT,EAAAU,cAAA,OAAKmB,IAAMlK,EAAQ,MADrB,cAKA8I,EAAAT,EAAAU,cAACqB,EAAD,CAAenB,KAAK,cAClBH,EAAAT,EAAAU,cAACuE,EAAD,CAAe1C,kBAAmB,SAAAnL,GAAE,OAAIE,EAAK4N,cAAc9N,IAAKkL,kBAAoBhN,KAAK0L,MAAMsB,qBAGjG7B,EAAAT,EAAAU,cAACqB,EAAD,CAAenB,KAAK,cAClBH,EAAAT,EAAAU,cAACyE,EAAD,CAAqB7C,kBAAoBhN,KAAK0L,MAAMsB,6BAzBjCzB,+BC4DduE,0LA1CX,OAAO,IAAIC,4EAGC/G,mFACOhJ,KAAKkB,YACtB,UACA,CAAC8H,wMAIegH,mFACChQ,KAAKkB,YACtB,gBACA,CAAC8O,sSAKgBhQ,KAAKkB,YACtB,iBACA,kBAFE4I,2BAKGA,EAAOjI,iMAGa8I,mFACR3K,KAAKkB,YACtB,yBACA,CACE8H,KAAM,CACJC,SAAU0B,EAAUlB,WAAWT,KAAKC,SACpCpE,OAAQ8F,EAAUlB,WAAWT,KAAKnE,OAClCgE,WAxDkB,IA0DpBf,WAAY6C,EAAUjB,KAAK5B,WAC3BmI,eAAgB5J,KAAK6J,MAAM,IAAO,0JAvDtC,OAAO,IAAIrP,QAAQ,SAACC,EAAKC,GACV,IAAI+O,EAAUhP,yFAIEqP,yFACZL,EAAU7O,uBAAzBb,kBAEEA,EAAOc,YACX,iBACA,CACEiP,0CAIG/P,wGAjBaT,GCDlByQ,aACJ,SAAAA,EAAYtO,EAAI2D,GAAU3F,OAAAC,EAAA,EAAAD,CAAAE,KAAAoQ,GACxBpQ,KAAK8B,GAAKA,EAEV,IAAIuO,EAAiB,IAAIpI,aAAa,KACtCoI,EAAexJ,KAAK,GACpBwJ,EAAe1M,IAAI8B,GAEnBzF,KAAKsQ,gBAAkB,IAAIvN,kBAAsBsN,EAAgB,GAAGE,YAAW,GAE/E,IAAI/K,EAAW,IAAIzC,iBACnByC,EAASK,aAAc,WAAY7F,KAAKsQ,iBACxC9K,EAASM,uBAET,IAAIC,EAAW,IAAIhD,uBAA4B,CAAEiD,QAAS,OAAUZ,MAAO,QAAUa,SAAU,QAAUC,UAAW,MAChHC,EAAO,IAAIpD,OAAYyC,EAAUO,GACrCI,EAAKC,SAAS9C,GAAK+C,KAAKC,GAAK,EAE7B,IACIC,GADM,IAAIxD,QAAayD,cAAeL,GACtBM,IACpBN,EAAK9C,SAASM,KAAK,EAAI4C,EAAUjD,GAAI,EAAIiD,EAAUhD,GAAI,EAAIgD,EAAU/C,GAErEjB,EAAaS,MAAMY,IAAIuC,GAEvBnG,KAAKmG,KAAOA,qDAGPV,GAEL,IAAI+K,EAAcxQ,KAAKsQ,gBAAgB1J,MACvC4J,EAAY3J,KAAK,GACjB2J,EAAY7M,IAAI8B,GAEhBzF,KAAKsQ,gBAAgBxJ,aAAc,EACnC9G,KAAKmG,KAAKX,SAASM,gCAuBR2K,aAlBb,SAAAA,IAAc3Q,OAAAC,EAAA,EAAAD,CAAAE,KAAAyQ,GACZzQ,KAAK0Q,WAAa,2DAGRC,GAAU,IAAA9Q,EAAAG,KACpB2Q,EAAU/F,QAAS,SAAAgG,GAAS,OAAI/Q,EAAKgR,YAAYD,4CAGxB,IAAd9O,EAAc0H,EAAd1H,GAAI2D,EAAU+D,EAAV/D,SAEZzF,KAAK0Q,WAAW5O,GACjB9B,KAAK0Q,WAAW5O,GAAI6M,OAAOlJ,GAE3BzF,KAAK0Q,WAAW5O,GAAM,IAAIsO,EAAUtO,EAAI2D,YClD/BqL,EAAA,aAAAC,GACb,SAAAC,IAAc,IAAAnR,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgR,IACZnR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkR,GAAA7Q,KAAAH,QAEKgB,MAAQ,IAAIyP,EAHL5Q,EADD,OAAAC,OAAAmR,EAAA,EAAAnR,CAAAkR,EAAAD,GAAAjR,OAAA0C,EAAA,EAAA1C,CAAAkR,EAAA,EAAAvO,IAAA,aAAAC,MAAA,eAAAwO,EAAApR,OAAAqR,EAAA,EAAArR,CAAAsR,EAAA1G,EAAA2G,KAAA,SAAAC,EAQInB,GARJ,IAAAnO,EAAAhC,KAAA,OAAAoR,EAAA1G,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cASXnP,EAAauI,cAEb9K,KAAKmQ,MAAQ,CACXwB,KAAM,CACJrO,EAAGqG,EAAY3I,MAAMmJ,WAAW7G,EAChCC,EAAGoG,EAAY3I,MAAMmJ,WAAW5G,EAChCC,EAAGmG,EAAY3I,MAAMmJ,WAAW3G,IAfzBgO,EAAAE,KAAA,EAmBY5B,EAAU8B,oBAAoB5R,KAAKmQ,OAnB/C,cAmBXnQ,KAAK6R,UAnBML,EAAAM,KAAAN,EAAAE,KAAA,EAoBL1R,KAAK+R,kBApBA,OAsBX/R,KAAK6R,UAAU7F,GAAG,gBAAiB,SAAAnK,GAAM,OAAIG,EAAKgQ,iBAAiBnQ,EAAOoQ,iBAtB/D,wBAAAT,EAAAU,SAAAZ,EAAAtR,SAAA,gBAAAmS,GAAA,OAAAjB,EAAAkB,MAAApS,KAAA4E,YAAA,KAAAnC,IAAA,eAAAC,MAAA,eAAA2P,EAAAvS,OAAAqR,EAAA,EAAArR,CAAAsR,EAAA1G,EAAA2G,KAAA,SAAAiB,EAyBM3H,GAzBN,OAAAyG,EAAA1G,EAAA6G,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EA0BL1R,KAAK6R,UAAUW,uBAAuB7H,GA1BjC,wBAAA4H,EAAAL,SAAAI,EAAAtS,SAAA,gBAAAyS,GAAA,OAAAJ,EAAAD,MAAApS,KAAA4E,YAAA,KAAAnC,IAAA,kBAAAC,MAAA,eAAAgQ,EAAA5S,OAAAqR,EAAA,EAAArR,CAAAsR,EAAA1G,EAAA2G,KAAA,SAAAsB,IAAA,IAAAC,EAAA,OAAAxB,EAAA1G,EAAA6G,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EA8Be1R,KAAK6R,UAAUiB,cA9B9B,OA8BPF,EA9BOC,EAAAf,KAgCX9R,KAAKgB,MAAM+R,YAAYH,GAhCZ,wBAAAC,EAAAX,SAAAS,EAAA3S,SAAA,yBAAA0S,EAAAN,MAAApS,KAAA4E,YAAA,KAAAnC,IAAA,mBAAAC,MAAA,SAmCIkQ,GACf5S,KAAKgB,MAAM+R,YAAYH,OApCZ5B,EAAA,CAAkB7O,MC0ClB6Q,qBAxCb,SAAAA,EAAY/H,GAAM,IAAApL,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgT,GAChBnT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkT,GAAA7S,KAAAH,KAAMiL,IAENgI,EAAWC,aAHKrT,sEAOhBoT,EAAWE,aAAaxJ,EAAYa,WAAW,qCAoB/C,OACEW,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,yBACbG,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,cACbG,EAAAT,EAAAU,cAAA,OAAKmB,IAAMlK,EAAQ,MADrB,YAKErC,KAAKwM,qDAlBM,IAAAxK,EAAAhC,KACjB,OACEmL,EAAAT,EAAAU,cAACqB,EAAD,CAAenB,KAAK,QAClBH,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,cACbG,EAAAT,EAAAU,cAAA,UAAQC,QAAS,kBAAMrJ,EAAKoR,SAA5B,iBArBiB7H,cCWZ8H,0LAZX,OACElI,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,uBACbG,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,cACbG,EAAAT,EAAAU,cAAA,OAAKmB,IAAMlK,EAAQ,MADrB,kBAJiBkJ,cCyEV+H,qBAnEb,SAAAA,EAAYrI,GAAM,IAAApL,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsT,IAChBzT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwT,GAAAnT,KAAAH,KAAMiL,KAEDS,MAAQ,CACX6H,YAAa,SAJC1T,6EAQJ0T,GACZvT,KAAK4L,SAAS,CAAC2H,iDAgBR,IAAAvR,EAAAhC,KACP,OACEmL,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,WACbG,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,WACbG,EAAAT,EAAAU,cAAA,OACEC,QAAS,kBAAMrJ,EAAKwR,cAAc,UAClCC,MAAO,CAAEC,gBAAiB,YAE1BvI,EAAAT,EAAAU,cAAA,OAAKmB,IAAMlK,EAAQ,MAJrB,SAOA8I,EAAAT,EAAAU,cAAA,OACEqI,MAAO,CAAEC,gBAAiB,WAC1BrI,QAAS,kBAAMrJ,EAAKwR,cAAc,gBAElCrI,EAAAT,EAAAU,cAAA,OAAKmB,IAAMlK,EAAQ,MAJrB,cAOA8I,EAAAT,EAAAU,cAAA,OACEqI,MAAO,CAAEC,gBAAiB,WAC1BrI,QAAS,kBAAMrJ,EAAKwR,cAAc,cAElCrI,EAAAT,EAAAU,cAAA,OAAKmB,IAAMlK,EAAQ,MAJrB,YAOA8I,EAAAT,EAAAU,cAAA,OACEqI,MAAO,CAAEC,gBAAiB,WAC1BrI,QAAS,kBAAMrJ,EAAKwR,cAAc,YAElCrI,EAAAT,EAAAU,cAAA,OAAKmB,IAAMlK,EAAQ,MAJrB,WASF8I,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,YACXhL,KAAK2T,gEA/Cb,OAAO3T,KAAK0L,MAAM6H,aAChB,IAAK,QACH,OAAOpI,EAAAT,EAAAU,cAACwI,EAAD,MACT,IAAK,aACH,OAAOzI,EAAAT,EAAAU,cAACyI,EAAD,MACT,IAAK,WACH,OAAO1I,EAAAT,EAAAU,cAAC0I,EAAD,MACT,IAAK,SACH,OAAO3I,EAAAT,EAAAU,cAAC2I,EAAD,cAtBOxI,cC2DPyI,qBA9Db,SAAAA,EAAY/I,GAAM,IAAApL,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgU,IAChBnU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkU,GAAA7T,KAAAH,KAAMiL,KAEDS,MAAQ,CACXlB,WAAY,GACZyJ,oBAAqB,IAEvBpU,EAAKqU,qBAAuB,KAPZrU,mFAWhB8J,EAAYqC,GAAG,yBAA0BhM,KAAKmU,aAAaxT,KAAKX,OAChE2J,EAAYqC,GAAG,wBAAyBhM,KAAKoU,cAAczT,KAAKX,4CAGrD2K,GACX3K,KAAK0L,MAAMlB,WAAW9E,KAAKiF,GAC3B3K,KAAKiM,oDAGOtB,GAAU,IAAA3I,EAAAhC,KACtBqU,aAAarU,KAAKkU,sBAElBlU,KAAK0L,MAAMuI,oBAAoBvO,KAAK1F,KAAK0L,MAAMlB,WAAWC,KAAK,SAAA6J,GAAE,OAAIA,EAAGxS,IAAM6I,EAAU7I,MACxF9B,KAAK0L,MAAMlB,WAAaxK,KAAK0L,MAAMlB,WAAW+J,OAAO,SAAAD,GAAE,OAAIA,EAAGxS,IAAM6I,EAAU7I,KAC9E9B,KAAKiM,cAELjM,KAAKkU,qBAAuBM,WAAW,WACrCxS,EAAK0J,MAAMuI,oBAAsB,IAChC,6CAGWtJ,6CAQCA,GAAU,IAAAiE,EAAA5O,KACzB,OACEmL,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,aACbG,EAAAT,EAAAU,cAAA,WACED,EAAAT,EAAAU,cAAA,0BAAmBT,EAAUrD,MAC7B6D,EAAAT,EAAAU,cAAA,QAAMC,QAAS,kBAAMuD,EAAK6F,gBAAgB9J,KAA1C,WAEFQ,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,qDAKZ,IAAAgE,EAAAhP,KACP,OACEmL,EAAAT,EAAAU,cAAA,OAAKJ,UAAYhL,KAAK0U,OAAS,2BAA4B,8BACvD1U,KAAK0L,MAAMlB,WAAW4C,IAAI,SAAAzC,GAAS,OAAIqE,EAAK2F,iBAAiBhK,KAC7D3K,KAAK0L,MAAMuI,oBAAoB7G,IAAI,SAAAzC,GAAS,OAAIqE,EAAK2F,iBAAiBhK,qCAnB5E,OAAO3K,KAAK0L,MAAMlB,WAAW3F,OAAS,SAtCV0G,cC2BjBqJ,sMAzBX1R,OAAO2R,SAAW7U,KAAK8U,aAAanU,KAAKX,MAEzCuC,EAAawS,KAAK/U,KAAKgV,eACvBhV,KAAK8U,sDAIL9U,KAAKgV,cAAcvB,MAAMwB,MAAQ,OACjCjV,KAAKgV,cAAcvB,MAAMyB,OAAQ,OACjClV,KAAKgV,cAAcC,MAAQjV,KAAKgV,cAAcG,YAC9CnV,KAAKgV,cAAcE,OAASlV,KAAKgV,cAAcI,aAE/C7S,EAAa8S,kDAGN,IAAAxV,EAAAG,KACP,OACEmL,EAAAT,EAAAU,cAAA,UACEJ,UAAU,eACVsK,IAAK,SAAAC,GAAO,OAAI1V,EAAKmV,cAAgBO,YArBlBhK,cCcZiK,2LAVX,OACErK,EAAAT,EAAAU,cAAA,OAAKJ,UAAU,OACbG,EAAAT,EAAAU,cAACqK,EAAD,MACAtK,EAAAT,EAAAU,cAACsK,GAAD,MACAvK,EAAAT,EAAAU,cAACuK,EAAD,cANUpK,cCGZqK,GAAcC,QACW,cAA7B3S,OAAO4S,SAASC,UAEe,UAA7B7S,OAAO4S,SAASC,UAEhB7S,OAAO4S,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/K,QACfyK,UAAUC,cAAcQ,WAK1BhU,QAAQiU,IAAI,6CAKZjU,QAAQiU,IAAI,2CAMrBC,MAAM,SAAAC,GACLnU,QAAQmU,MAAM,4CAA6CA,KCzEjEC,IAASvS,OAAO0G,EAAAT,EAAAU,cAAC6L,GAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBhB,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,aAAwBnU,OAAO4S,UAC3CwB,SAAWpU,OAAO4S,SAASwB,OAIvC,OAGFpU,OAAOqU,iBAAiB,OAAQ,WAC9B,IAAMrB,EAAK,GAAAjP,OAAMoQ,aAAN,sBAEPzB,IAiDV,SAAiCM,GAE/BsB,MAAMtB,GACHI,KAAK,SAAAmB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C1B,UAAUC,cAAc0B,MAAMxB,KAAK,SAAAC,GACjCA,EAAawB,aAAazB,KAAK,WAC7BpT,OAAO4S,SAASkC,aAKpB/B,GAAgBC,KAGnBY,MAAM,WACLlU,QAAQiU,IACN,mEArEAoB,CAAwB/B,GAIxBC,UAAUC,cAAc0B,MAAMxB,KAAK,WACjC1T,QAAQiU,IACN,+GAMJZ,GAAgBC,MCzCxBgC","file":"static/js/main.f64153ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/model_icon.5b6e3166.svg\";","module.exports = __webpack_public_path__ + \"static/media/operations_icon.c27d4702.svg\";","module.exports = __webpack_public_path__ + \"static/media/simulate_icon.4b3eb9e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/export_icon.7c0c7e01.svg\";","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"8651d2eb8b080a7af1ec.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"3f01e2f2591ae1c410f1.worker.js\");\n};","import WasmWorker from './wasm.worker';\nimport EventEmitter from 'events'\n\nexport default class Worker extends EventEmitter {\n  static create(){\n    return new Promise((res, rej) => {\n      let worker = new Worker(res);\n    });\n  }\n\n  static async createWithModel(model){\n    let worker = await Worker.create();\n\n    await worker.sendCommand(\n      'setModel',\n      {\n        modelBuffer: model.buffer,\n        triangles: model.triangles\n      }\n    );\n\n    return worker;\n  }\n\n  constructor(onReady){\n    super();\n\n    this.worker = this._createWorker();\n    this._onReady = onReady;\n    this._cmdId = 0;\n    this._callbacks = {};\n\n    this.worker.onmessage = this._onMessage.bind(this);\n  }\n\n  _createWorker(){\n    return new WasmWorker();\n  }\n\n  _onMessage(reply){\n    let message = reply.data;\n\n    if(message.type == 'ready'){\n      this._onReady(this);\n      return;\n    }\n\n    if(message.event){\n      this.emit(message.event, message.params);\n      return;\n    }\n\n    if(message.id && this._callbacks[message.id]){\n      this._callbacks[message.id](message);\n      delete this._callbacks[message.id];\n    }\n  }\n\n  sendCommand(action, params){\n    return new Promise((res, rej) => {\n      let id = ++this._cmdId;\n      this._callbacks[id] = res;\n      this.worker.postMessage({id, action, params});\n    });\n  }\n\n  destroy(){\n    this.worker.terminate();\n  }\n}\n","import * as THREE from 'three';\nconst OrbitControls = require('three-orbitcontrols');\n\n\nexport default new class SceneManager {\n  init(canvas) {\n    console.dir(canvas);\n    this.clock = new THREE.Clock();\n\n    this.scene = new THREE.Scene();\n\t\tthis.camera = new THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 1000 );\n    this.camera.position.x = 100;\n    this.camera.position.y = 100;\n    this.camera.position.z = 100;\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n    let light = new THREE.PointLight( 0xffffff, 1, 0 );\n    light.position.set(500, 150, 0 );\n    this.scene.add( light );\n\n    let light2 = new THREE.PointLight( 0xffffff, 1, 0 );\n    light2.position.set( -500, 150, 0);\n    this.scene.add( light2 );\n\n    let light3 = new THREE.PointLight( 0xffffff, 1, 0 );\n    light3.position.set( 0, -150, 500 );\n    this.scene.add( light3 );\n\n    let light4 = new THREE.PointLight( 0xffffff, 1, 0 );\n    light4.position.set( 0, -150, -500 );\n    this.scene.add( light4 );\n\n    let light5 = new THREE.PointLight( 0xffffff, 1, 0 );\n    light5.position.set( 0, 100, 0 );\n    this.scene.add( light4 );\n\n    this.addGrid();\n\n    this.renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\n\t\tthis.controls = new OrbitControls( this.camera, this.renderer.domElement );\n\n    this.animate();\n  }\n\n  addControls(){\n\n  }\n\n  onWindowResize(){\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setSize( window.innerWidth, window.innerHeight );\n  }\n\n  animate() {\n    this.render();\n  }\n\n  render() {\n    requestAnimationFrame( this.render.bind(this) );\n    //this.controls.update();\n    this.renderer.render( this.scene, this.camera );\n  }\n\n  addGrid(xDimension = 200, yDimension = 200, divisionStep = 20, subDivisions = 5) {\n    //let grid = new THREE.GridHelper(300, 10);\n    //this.scene.add(grid);\n\n    let gridGroup = new THREE.Group();\n    let thinLineMaterial = new THREE.LineBasicMaterial( {\n\t    color: 0x333333,\n\t    linewidth: 0.1\n    } );\n    let thickLineMaterial = new THREE.LineBasicMaterial( {\n\t    color: 0x666666,\n\t    linewidth: 2\n    } );\n    let subDivisionInterval = divisionStep / subDivisions;\n\n    for(let x=0; x <= xDimension; x += subDivisionInterval){\n      let geometry = new THREE.Geometry();\n      geometry.vertices.push(new THREE.Vector3( x, 0, 0) );\n      geometry.vertices.push(new THREE.Vector3( x, 0, yDimension) );\n\n      let line = new THREE.Line( geometry, ( x % divisionStep == 0 ? thickLineMaterial : thinLineMaterial) );\n      gridGroup.add(line);\n    }\n\n    for(let y=0; y <= yDimension; y += subDivisionInterval){\n      let geometry = new THREE.Geometry();\n      geometry.vertices.push(new THREE.Vector3( 0, 0, y) );\n      geometry.vertices.push(new THREE.Vector3( xDimension, 0, y) );\n\n      let line = new THREE.Line( geometry, ( y % divisionStep == 0 ? thickLineMaterial : thinLineMaterial) );\n      gridGroup.add(line);\n    }\n\n    this.scene.add(gridGroup);\n  }\n\n  showModel(meshBuffer) {\n    let geometry = new THREE.BufferGeometry();\n    \n    geometry.addAttribute( 'position', new THREE.BufferAttribute( meshBuffer, 3 ) );\n    geometry.computeVertexNormals();\n    \n    let material = new THREE.MeshStandardMaterial( { ambient: 0x050505, color: 0x335cff, specular: 0x555555, shininess: 100 } );\n    this.mesh = new THREE.Mesh( geometry, material );\n    this.mesh.rotation.x = -Math.PI / 2;\n\n    let box = new THREE.Box3().setFromObject( this.mesh );\n    let minVector = box.min;\n    this.mesh.position.set(-1 * minVector.x, -1 * minVector.y, -1 * minVector.z);\n\n    this.scene.add(this.mesh);\n  }\n\n  removeModel(){\n    this.scene.remove(this.mesh);\n    delete this.mesh;\n  }\n\n  modifyModel(meshBuffer){\n    //let newSize = meshBuffer.length;\n\n    this.mesh.geometry.attributes.position.array.fill(0);\n    this.mesh.geometry.attributes.position.array.set(meshBuffer);\n    //this.mesh.geometry.attributes.position.array = meshBuffer;\n    this.mesh.geometry.attributes.position.needsUpdate = true;\n    this.mesh.geometry.computeVertexNormals();\n  }\n\n  removePath(pathId){\n    let pathName = `Path::${pathId}`;\n    let selectedObject = this.scene.getObjectByName(pathName);\n\n    this.scene.remove( selectedObject );\n  }\n\n  showPath(pathId, toolpath) {\n    let pathName = `Path::${pathId}`;\n    let pathGroup = new THREE.Group();\n    pathGroup.name = pathName;\n\n    let material = new THREE.MeshBasicMaterial({ color: 0x0000ff });\n    let geometry = new THREE.Geometry();\n    let currentPathType = toolpath[0].pathType;\n\n    for(let i = 0; i < toolpath.length; i++) {\n      let thisPath = toolpath[i];\n      geometry.vertices.push(new THREE.Vector3(thisPath.start.x, thisPath.start.z, thisPath.start.y));\n      \n      if( currentPathType != thisPath.pathType) {\n        let line = new THREE.Line(geometry, material);\n        pathGroup.add(line);\n        \n        currentPathType = thisPath.pathType;\n        geometry = new THREE.Geometry();\n        let nextColor = currentPathType == 0 ? 0x0000ff : 0x00ffff;\n        material = new THREE.MeshBasicMaterial({ color: nextColor });\n        \n        geometry.vertices.push(new THREE.Vector3(thisPath.start.x, thisPath.start.z, thisPath.start.y));\n      }\n    };\n    let line = new THREE.Line(geometry, material);\n    pathGroup.add(line)\n    \n    this.scene.add(pathGroup);\n  }\n}\n\n\n","import * as THREE from 'three';\nimport SceneManager from './scene_manager'\n\nlet id = 0;\n\nclass Path {\n  constructor(pathBuffer){\n    this.pathBuffer = pathBuffer;\n    this.lineCount = pathBuffer.length / 4;\n    this.id = id++;\n  }\n\n  toThreeObject(){\n    let lineBuffer = new Float32Array(3 * this.lineCount);\n    let colorBuffer = new Float32Array(3 * this.lineCount);\n    let indices = [];\n\n    for(let n=0; n < this.lineCount; n++){\n      if(n > 0) indices.push(n - 1, n);\n\n      let pathBufOffset = 4*n;\n      let bufOffset = 3*n;\n\n      lineBuffer[bufOffset] = this.pathBuffer[pathBufOffset+1];\n      lineBuffer[bufOffset+1] = this.pathBuffer[pathBufOffset+3];\n      lineBuffer[bufOffset+2] = this.pathBuffer[pathBufOffset+2];\n\n      switch( this.pathBuffer[pathBufOffset] ){\n        case 0:\n          colorBuffer[bufOffset] = 255;\n          colorBuffer[bufOffset+1] = 255;\n          colorBuffer[bufOffset+2] = 255;\n          break;\n        case 1:\n          colorBuffer[bufOffset] = 0;\n          colorBuffer[bufOffset+1] = 255;\n          colorBuffer[bufOffset+2] = 0;\n          break;\n      }\n    }\n\n    let geometry = new THREE.BufferGeometry();\n    geometry.setIndex( indices );\n    geometry.addAttribute( 'position', new THREE.BufferAttribute( lineBuffer, 3 ) );\n    geometry.addAttribute( 'color', new THREE.BufferAttribute( colorBuffer, 3 ) );\n\n    let material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n//TODO: Set ID and add hide method\n    return new THREE.LineSegments( geometry, material );\n  }\n\n  show(){\n    SceneManager.scene.add(this.toThreeObject());\n  }\n}\n\nexport default Path;\n","import Worker from './worker';\nimport PathManager from './path_manager';\nimport SceneManager from './scene_manager'\nimport Path from './path'\n\nconst DEFAULT_TYPE = 'sweepline';\nconst DEFAULTS = {\n  sweepline: {\n    resolution: 0.1,\n    boundryOffset: 5,\n    direction: 'X',\n    tool: {\n      diameter: 3,\n      length: 40\n    },\n    stepoverPercent: 50,\n    zDepthMax: 0,\n    zDepthStart: 50,\n    zDepthStep: 25\n  }\n}\n\nlet count = 0;\n\nclass Operation {\n  constructor({type, properties}) {\n    this.id = ++count;\n    this.type = type || DEFAULT_TYPE;\n    this.properties = properties || DEFAULTS[this.type];\n    this.path = null;\n  }\n\n  async generate(){\n    PathManager.emit('operationGenerateStart', this);\n    SceneManager.removePath(this.id);\n\n    let worker = await Worker.createWithModel(PathManager.model);\n    let result = await worker.sendCommand('generatePath', this.properties);\n\n    worker.destroy();\n\n    this.path = new Path(result.params.pathBuffer);\n    this.path.show();\n\n    PathManager.emit('operationGenerateStop', this);\n    //SceneManager.showPath(this.id, this.path);\n  }\n\n  destroy(){\n    SceneManager.removePath(this.id);\n  }\n}\n\nexport default Operation\n","\nimport SceneManager from './scene_manager'\nimport Worker from './worker';\n\nexport default class Model {\n  static async create(modelFile){\n    let worker = await Worker.create();\n    let result = await worker.sendCommand(\n      'parseModel',\n      {\n        file: modelFile\n      }\n    );\n\n    worker.destroy();\n    return new Model(result.params);\n  }\n\n  constructor(params){\n    this.buffer = params.modelBuffer;\n    this.filename = params.filename;\n    this.triangles = params.triangles;\n    this.dimensions = params.dimensions;\n\n    SceneManager.showModel(this.buffer);\n  } \n}\n","import Operation from './operation'\nimport SceneManager from './scene_manager'\nimport EventEmitter from 'events'\nimport Model from './model';\n\nclass PathManager extends EventEmitter {\n  constructor(){\n    super();\n\n    this.operations = [];\n    this.model = null;\n  }\n\n  getOperation(id){\n    return this.operations.find(a => a.id == id);\n  }\n\n  addNewOperation(){\n    let operation = new Operation({});\n    this.operations.push( operation );\n\n    return operation;\n  }\n\n  async setModel(modelFile) {\n    this.model = await Model.create(modelFile);\n\n    this.emit('modelReady');\n  }\n\n  clearOperations(){\n    this.operations.forEach(operation => operation.destroy());\n    this.operations = [];\n  }\n\n  clearModel(){\n    this.clearOperations();\n    this.model = null;\n\n    SceneManager.removeModel();\n  }\n}\n\nexport default new PathManager();\n","import React, { Component } from 'react';\n\nimport './Button.css'\n\nclass Button extends Component {\n  static defaultProps = {\n    enabled: true\n  }\n\n  render() {\n    let className = `Button${ this.props.enabled ? '' : ' disabled' }`;\n\n    return (\n      <div\n        className={ className }\n        onClick={() => { this.props.enabled && this.props.onClick() }}\n      >\n        { this.props.text }\n      </div>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\n\nimport './TabbedSection.css'\n\nclass TabbedSection extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = { open: true };\n  }\n\n  toggleHeader(){\n    this.setState({ open: !this.state.open });\n  }\n\n  render() {\n    let headerClass = \"tabbedHeader \" + (this.state.open ? \"open\" : \"closed\");\n\n    return (\n      <div className=\"TabbedSection\">\n        <div className=\"tabbedHeader\" onClick={() => this.toggleHeader()}>\n          <span>{ this.props.text }</span>\n          <span>{ this.state.open ? \"▾\" : \"▴\" }</span>\n        </div>\n        { this.state.open && (\n          <div className=\"tabbedContent\">\n            { this.props.children }\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TabbedSection;\n","import React, { Component } from 'react';\nimport PathManager from '../../models/path_manager';\nimport Button from '../common/Button';\nimport TabbedSection from '../common/TabbedSection';\n\nimport './ModelMenu.css'\n\nclass ModelMenu extends Component {\n  componentDidMount(){\n    PathManager.on('modelReady', () => this.forceUpdate());\n  }\n\n  async onChange(e){\n    let file = e.target.files[0];\n    await PathManager.setModel(file);\n  }\n\n  async clearModel(){\n    PathManager.clearModel();\n    this.forceUpdate();\n  }\n\n  get renderContent(){\n    if(PathManager.model){\n      const model = PathManager.model;\n\n      return (\n        <div>\n          <TabbedSection text=\"Model\">\n            <div className=\"modelProperties\">\n              <div>\n                <span>Filename</span>\n                <span>{ model.filename }</span>\n              </div>\n              <div>\n                <span>Polygons</span>\n                <span>{ model.triangles }</span>\n              </div>\n\n              <fieldset className=\"dimensionsField\">\n                <legend>Dimensions</legend>\n\n                <div>\n                  <span>X</span>\n                  <span>{ model.dimensions.x } mm</span>\n                </div>\n                <div>\n                  <span>Y</span>\n                  <span>{ model.dimensions.y } mm</span>\n                </div>\n                <div>\n                  <span>Z</span>\n                  <span>{ model.dimensions.z } mm</span>\n                </div>\n              </fieldset>\n\n              <div>\n                <Button text=\"Clear\" onClick={() => this.clearModel()}/>\n              </div>\n            </div>\n          </TabbedSection>\n        </div>\n      )\n    } else {\n      return (\n        <TabbedSection text=\"Model\">\n          <div className=\"modelInput\">\n            <input type=\"file\" onChange={ this.onChange.bind(this) } accept=\".stl\" />\n          </div>\n        </TabbedSection>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"SideMenu ModelMenu\">\n        <div className=\"menuHeader\">\n          <img src={ require('../../images/model_icon.svg') } />\n          Model\n        </div>\n\n        { this.renderContent }\n      </div>\n    );\n  }\n}\n\nexport default ModelMenu;\n","import React, { Component } from 'react';\nimport Button from '../../common/Button';\nimport PathManager from '../../../models/path_manager';\n\nimport './OperationList.css'\n\nclass OperationList extends Component {\n  createNew(){\n    let operation = PathManager.addNewOperation();\n\n    this.selectOperation(operation.id);\n  }\n\n  selectOperation(selectedOperation){\n    this.props.onOperationSelect(selectedOperation)\n  }\n\n  get listContent(){\n    return PathManager.operations.map( operation => {\n      let selected = operation.id === this.props.selectedOperation;\n\n      return (\n        <div\n          className={'operation' + (selected ? ' selected' : '')}\n          key={operation.id} onClick={() => this.selectOperation(operation.id)}\n        >\n          <span className=\"opName\">{ operation.type }</span>\n          <div className=\"opButtons\">\n            \n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"OperationList\">\n        <div className=\"listContainer\">\n          { this.listContent }\n        </div>\n        <div className=\"buttonContainer\">\n          <Button text=\"New\" onClick={() => this.createNew()} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OperationList;\n","import React, { Component } from 'react';\n\nclass NumberField extends Component {\n  render() {\n    return (\n      <div className=\"propertyField\">\n        <span>{ this.props.field.name }</span>\n        <span>\n          <input\n            type=\"number\"\n            value={ this.props.value }\n            onChange={e => this.props.onChange(Number(e.target.value))}\n            min={this.props.field.minValue}\n            max={this.props.field.maxValue}\n            step={this.props.field.stepValue}\n          />\n          <span className=\"propSuffix\">{ this.props.field.suffix }</span>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default NumberField;\n","import React, { Component } from 'react';\nimport NumberField from './NumberField';\n\nimport './ToolField.css'\n\nconst fields = {\n  diameter: {\n    name: 'Diameter',\n    type: 'number',\n    minValue: 0.1,\n    stepValue: 0.01,\n    suffix: 'mm'\n  },\n  length: {\n    name: 'Length',\n    type: 'number',\n    minValue: 0.1,\n    stepValue: 0.01,\n    suffix: 'mm'\n  },\n}\n\nclass ToolField extends Component {\n  onUpdate(){\n\n  }\n\n  render() {\n    return (\n      <fieldset className=\"ToolField\">\n        <legend>Tool</legend>\n\n        <div className=\"propertyField\">\n          <span>Endmill Type</span>\n          <select\n          >\n            <option>Flat nose</option>\n            <option>Ball nose</option>\n          </select>\n        </div>\n\n        <NumberField field={ fields.diameter } value={ this.props.tool.diameter } onChange={value => this.props.onFieldChange('diameter', value)} />\n        <NumberField field={ fields.length } value={ this.props.tool.length } onChange={value => this.props.onFieldChange('length', value)} />\n      </fieldset>\n    );\n  }\n}\n\nexport default ToolField;\n","/*\n    resolution: 0.1,\n    boundryOffset: 5,\n    direction: 'X',\n    tool: {\n      diameter: 3,\n      length: 40\n    },\n    stepoverPercent: 50,\n    zDepthMax: 0,\n    zDepthStart: 50,\n    zDepthStep: 25\n*/\nimport React, { Component } from 'react';\nimport Button from '../../../common/Button';\nimport PathManager from '../../../../models/path_manager';\nimport NumberField from './NumberField';\nimport ToolField from './ToolField';\n\nconst fields = {\n  resolution: {\n    name: 'Resolution',\n    type: 'number',\n    minValue: 0.01,\n    maxValue: 5,\n    stepValue: 0.01,\n    suffix: 'mm'\n  },\n  boundryOffset: {\n    name: \"Boundry Offset\",\n    type: 'number',\n    minValue: 0,\n    suffix: 'mm'\n  },\n  direction: {\n    name: 'Direction',\n    options: ['x', 'y']\n  },\n  stepoverPercent: {\n    name: \"Stepover\",\n    type: 'number',\n    minValue: 1,\n    maxValue: 100,\n    stepValue: 1,\n    suffix: '%'\n  },\n  zDepthMax: {\n    name: \"Z Depth Stop\",\n    type: 'number',\n    minValue: 0,\n    suffix: 'mm'\n  },\n  zDepthStart: {\n    name: \"Z Depth Start\",\n    type: 'number',\n    minValue: 0,\n    suffix: 'mm'\n  },\n  zDepthStep: {\n    name: \"Z Depth Stepdown\",\n    type: 'number',\n    minValue: 0.01,\n    suffix: 'mm'\n  }\n}\n\n// TODO: Min max on number fields\n// TODO: Dropdown fields\n// TODO: Text name field\n// TODO: Generate button\n\nclass SweeplineProperties extends Component {\n  constructor(props){\n    super(props);\n  \n    this.state = Object.assign(\n      { hasBeenUpdated: false },\n      this.props.operation.properties\n    );\n  }\n\n  save(){\n    let fieldNames = Object.keys(fields);\n    fieldNames.forEach(key => { this.props.operation.properties[key] = this.state[key] });\n\n    this.setState({ hasBeenUpdated: false });  \n  }\n\n  generate(){\n    this.save();\n\n    this.props.operation.generate(this.props.operation.id);\n  }\n\n  updateToolValue(propertyName, value){\n    let update = { hasBeenUpdated: true, tool: this.state.tool };\n    update.tool[propertyName] = value;\n\n    this.setState(update);\n  }\n\n  updateFieldValue(propertyName, value){\n    let update = { hasBeenUpdated: true };\n    update[propertyName] = value;\n\n    this.setState(update);\n  }\n\n  dropdownFieldFor(propertyName){\n    const field = fields[propertyName];\n\n    return (\n      <div className=\"propertyField\">\n        <span>{ field.name }</span>\n        <span>\n          <select\n            value={this.state[propertyName]}\n            onChange={e => this.updateFieldValue(propertyName, e.target.value)}\n          >\n            { field.options.map( (option, i) => {\n               return <option value={ option } key={ i }>{ option.toUpperCase() }</option>\n              })\n            }\n          </select>\n        </span>\n      </div>\n    );\n  }\n\n  get buttonContent(){\n    return (\n      <div className=\"buttonContainer\">\n        <Button text=\"Save\" onClick={() => this.save()} enabled={ this.state.hasBeenUpdated }/>\n        <Button text=\"Generate\" onClick={() => this.generate()} />\n      </div>\n    );\n  }\n\n  render() {\n    let operation = this.props.operation;\n\n    return (\n      <div className=\"SubProperties\">\n        <ToolField tool={ this.state.tool } onFieldChange={(field, value) => this.updateToolValue(field, value)} />\n\n        <NumberField field={ fields.resolution } value={this.state.resolution} onChange={value => this.updateFieldValue('resolution', value)} />\n        { this.dropdownFieldFor('direction') }\n        <NumberField field={ fields.boundryOffset } value={this.state.boundryOffset} onChange={value => this.updateFieldValue('boundryOffset', value)} />\n        <NumberField field={ fields.stepoverPercent } value={this.state.stepoverPercent} onChange={value => this.updateFieldValue('stepoverPercent', value)} />\n        <NumberField field={ fields.zDepthStart } value={this.state.zDepthStart} onChange={value => this.updateFieldValue('zDepthStart', value)} />\n        <NumberField field={ fields.zDepthMax } value={this.state.zDepthMax} onChange={value => this.updateFieldValue('zDepthMax', value)} />\n        <NumberField field={ fields.zDepthStep } value={this.state.zDepthStep} onChange={value => this.updateFieldValue('zDepthStep', value)} />\n\n        { this.buttonContent }\n      </div>\n    );\n  }\n}\n\nexport default SweeplineProperties;\n","import React, { Component } from 'react';\nimport SweeplineProperties from './OperationProperties/SweeplineProperties';\nimport PathManager from '../../../models/path_manager';\n\nimport './OperationProperties.css'\n\nclass OperationProperties extends Component {\n  get propertiesContent(){\n    let operation = PathManager.getOperation(this.props.selectedOperation);\n\n    switch(operation.type){\n      case 'sweepline':\n        return <SweeplineProperties operation={ operation } />\n\n    }\n  }\n\n  render() {\n    let content;\n\n    if(this.props.selectedOperation == null)\n      return (\n        <div className=\"OperationProperties\">\n          <div className=\"message\">Select an operation to edit</div>\n        </div>\n      );\n    else\n      return (\n        <div className=\"OperationProperties\">\n          { this.propertiesContent }\n        </div>\n      );\n  }\n}\n\nexport default OperationProperties;\n","import React, { Component } from 'react';\nimport OperationList from './Operations/OperationList';\nimport OperationProperties from './Operations/OperationProperties';\nimport TabbedSection from '../common/TabbedSection';\nimport PathManager from '../../models/path_manager';\n\nimport './OperationsMenu.css'\n\nclass OperationsMenu extends Component {\n  constructor(props){\n    super(props);\n\n    let selectedOperation = PathManager.operations.length > 0 ? PathManager.operations[0].id : null;\n    this.state = {selectedOperation};\n  }\n\n  openOperation(selectedOperation){\n    this.setState({selectedOperation});\n  }\n\n  render() {\n    return (\n      <div className=\"SideMenu OperationsMenu\">\n        <div className=\"menuHeader\">\n          <img src={ require('../../images/operations_icon.svg') } />\n          Operations\n        </div>\n\n        <TabbedSection text=\"Operations\">\n          <OperationList onOperationSelect={id => this.openOperation(id)} selectedOperation={ this.state.selectedOperation } />\n        </TabbedSection>\n\n        <TabbedSection text=\"Properties\">\n          <OperationProperties selectedOperation={ this.state.selectedOperation } />\n        </TabbedSection>\n      </div>\n    );\n  }\n}\n\nexport default OperationsMenu;\n","import Worker from './worker';\nimport WasmSimWorker from './wasm.sim.worker';\n\nconst POSITION_RESOLUTION = 0.1;\n\nclass SimWorker extends Worker {\n  static create(){\n    return new Promise((res, rej) => {\n      let worker = new SimWorker(res);\n    });\n  }\n\n  static async createForSimulation(stock){\n    let worker = await SimWorker.create();\n\n    await worker.sendCommand(\n      'initSimulation',\n      {\n        stock\n      }\n    );\n\n    return worker;\n  }\n\n  _createWorker(){\n    return new WasmSimWorker();\n  }\n\n  async setTool(tool){\n    let result = await this.sendCommand(\n      'setTool',\n      {tool}\n    );\n  }\n\n  async toolCollision(toolPosition){\n    let result = await this.sendCommand(\n      'toolCollision',\n      {toolPosition}\n    );\n  }\n\n  async getPolygons(){\n    let result = await this.sendCommand(\n      'getSimPolygons',\n      {}\n    );\n\n    return result.params;\n  }\n\n  async runOperationSimulation(operation){\n    let result = await this.sendCommand(\n      'runOperationSimulation',\n      {\n        tool: {\n          diameter: operation.properties.tool.diameter,\n          length: operation.properties.tool.length,\n          resolution: POSITION_RESOLUTION\n        },\n        pathBuffer: operation.path.pathBuffer,\n        updateInterval: Math.floor(1000 / 15) \n      }\n    );\n  }\n}\n\nexport default SimWorker;\n","import * as THREE from 'three';\nimport SceneManager from './scene_manager';\n\n\nclass SubObject {\n  constructor(id, vertices){\n    this.id = id;\n\n    let paddedVertexes = new Float32Array(300000);\n    paddedVertexes.fill(0);\n    paddedVertexes.set(vertices);\n\n    this.vertexAttribute = new THREE.BufferAttribute(paddedVertexes, 3).setDynamic(true);\n\n    let geometry = new THREE.BufferGeometry();\n    geometry.addAttribute( 'position', this.vertexAttribute );\n    geometry.computeVertexNormals();\n\n    let material = new THREE.MeshStandardMaterial( { ambient: 0x050505, color: 0x335cff, specular: 0x555555, shininess: 100 } );\n    let mesh = new THREE.Mesh( geometry, material );\n    mesh.rotation.x = -Math.PI / 2;\n\n    let box = new THREE.Box3().setFromObject( mesh );\n    let minVector = box.min;\n    mesh.position.set(-1 * minVector.x, -1 * minVector.y, -1 * minVector.z);\n\n    SceneManager.scene.add(mesh);\n\n    this.mesh = mesh;\n  }\n  \n  update(vertices){\n\n    let vertexArray = this.vertexAttribute.array;\n    vertexArray.fill(0);\n    vertexArray.set(vertices);\n\n    this.vertexAttribute.needsUpdate = true;\n    this.mesh.geometry.computeVertexNormals();\n  }\n}\n\nclass SimModel {\n  constructor(){\n    this.subObjects = {};\n  }\n\n  updateModel(fullArray){\n    fullArray.forEach( polyGroup => this.updateGroup(polyGroup) );\n  }\n\n  updateGroup({id, vertices}){\n\n    if(this.subObjects[id]){\n      this.subObjects[id].update(vertices);\n    } else {\n      this.subObjects[id] = new SubObject(id, vertices);\n    }\n  }\n}\n\nexport default SimModel;\n","import SceneManager from './scene_manager'\nimport PathManager from './path_manager'\nimport EventEmitter from 'events'\nimport SimWorker from './sim_worker';\nimport SimModel from './sim_model';\n\nexport default new class extends EventEmitter {\n  constructor() {\n    super();\n\n    this.model = new SimModel();\n\n  }\n\n  async initialize(stock){\n    SceneManager.removeModel();\n\n    this.stock = {\n      size: {\n        x: PathManager.model.dimensions.x,\n        y: PathManager.model.dimensions.y,\n        z: PathManager.model.dimensions.z\n      }\n    };\n\n    this.simWorker = await SimWorker.createForSimulation(this.stock);\n    await this.getFullPolygons();\n\n    this.simWorker.on('polygonUpdate', params => this.updateModelEvent(params.polygonBuffer));\n  }\n\n  async runOperation(operation){\n    await this.simWorker.runOperationSimulation(operation);\n  }\n\n  async getFullPolygons(){\n    let polygonUpdate = await this.simWorker.getPolygons();\n\n    this.model.updateModel(polygonUpdate);\n  }\n\n  updateModelEvent(polygonUpdate){\n    this.model.updateModel(polygonUpdate);\n  }\n\n/*\n  async runOperation(operation){\n    await this.simWorker.setTool({\n      diameter: operation.properties.tool.diameter,\n      length: operation.properties.tool.length,\n      resolution: POSITION_RESOLUTION\n    });\n\n    this.startPolygonUpdater();\n\n    let segmentCount = operation.path.length;\n\n    for(let i = 0; i < segmentCount; i++){\n      let segment = operation.path[i];\n      await this.runLine(segment.start, segment.end);\n    }\n\n    this.stopPolygonUpdater();\n  }\n\n  async runLine(start, finish){\n    let deltas = {\n      x: finish.x - start.x,\n      y: finish.y - start.y,\n      z: finish.z - start.z\n    }\n    let position = {\n      x: start.x,\n      y: start.y,\n      z: start.z,\n    }\n\n    // Distance / resolution\n    let totalSteps = Math.sqrt(deltas.x*deltas.x + deltas.y*deltas.y + deltas.z*deltas.z) / POSITION_RESOLUTION;\n    deltas.x /= totalSteps;\n    deltas.y /= totalSteps;\n    deltas.z /= totalSteps;\n\n\n    for(let step = 0; step < totalSteps; step++){\n      position.x += deltas.x;\n      position.y += deltas.y;\n      position.z += deltas.z;\n\n      await this.simWorker.toolCollision(position);\n    };\n\n    let polygons = await this.simWorker.getPolygons();\n    SceneManager.modifyModel(polygons);\n  }\n*/\n}\n","import React, { Component } from 'react';\nimport TabbedSection from '../common/TabbedSection';\nimport SimManager from '../../models/sim_manager';\nimport PathManager from '../../models/path_manager';\n\nimport './SimulateMenu.css';\n\nclass SimulateMenu extends Component {\n  constructor(props){\n    super(props);\n    \n    SimManager.initialize();\n  }\n\n  test(){\n    SimManager.runOperation(PathManager.operations[0]);\n/*\n    SimManager.runLine(\n      {x: 0, y: 0, z: 0},\n      {x: 50, y: 50, z: 0},\n    );\n*/\n  }\n\n  get renderContent(){\n    return (\n      <TabbedSection text=\"Test\">\n        <div className=\"modelInput\">\n          <button onClick={() => this.test()}>Test</button>\n        </div>\n      </TabbedSection>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"SideMenu SimulateMenu\">\n        <div className=\"menuHeader\">\n          <img src={ require('../../images/simulate_icon.svg') } />\n          Simulate\n        </div>\n\n        { this.renderContent }\n      </div>\n    );\n  }\n}\n\nexport default SimulateMenu;\n","import React, { Component } from 'react';\n\nimport './ExportMenu.css';\n\nclass ExportMenu extends Component {\n  render() {\n    return (\n      <div className=\"SideMenu ExportMenu\">\n        <div className=\"menuHeader\">\n          <img src={ require('../../images/export_icon.svg') } />\n          Export\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default ExportMenu;\n","import React, { Component } from 'react';\nimport ModelMenu from './ModelMenu';\nimport OperationsMenu from './OperationsMenu';\nimport SimulateMenu from './SimulateMenu';\nimport ExportMenu from './ExportMenu';\n\nimport './Sidebar.css';\n\n\nclass Sidebar extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      currentMenu: 'model'\n    };\n  }\n\n  onHeaderClick(currentMenu){\n    this.setState({currentMenu});\n  }\n\n  get currentMenuElement(){\n    switch(this.state.currentMenu){\n      case 'model':\n        return <ModelMenu />;\n      case 'operations':\n        return <OperationsMenu />;\n      case 'simulate':\n        return <SimulateMenu />;\n      case 'export':\n        return <ExportMenu />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Sidebar\">\n        <div className=\"headers\">\n          <div\n            onClick={() => this.onHeaderClick('model')}\n            style={{ backgroundColor: '#587291'}}\n          >\n            <img src={ require('../../images/model_icon.svg') } />\n            Model\n          </div>\n          <div\n            style={{ backgroundColor: '#2F97C1'}}\n            onClick={() => this.onHeaderClick('operations')}\n          >\n            <img src={ require('../../images/operations_icon.svg') } />\n            Operations\n          </div>\n          <div\n            style={{ backgroundColor: '#1CCAD8'}}\n            onClick={() => this.onHeaderClick('simulate')}\n          >\n            <img src={ require('../../images/simulate_icon.svg') } />\n            Simulate\n          </div>\n          <div\n            style={{ backgroundColor: '#B4656F'}}\n            onClick={() => this.onHeaderClick('export')}\n          >\n            <img src={ require('../../images/export_icon.svg') } />\n            Export\n          </div>\n        </div>\n\n        <div className=\"menuItem\">\n          { this.currentMenuElement }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport PathManager from '../../models/path_manager';\n\nimport './PendingOperations.css';\n\nclass PendingOperations extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      operations: [],\n      completedOperations: []\n    };\n    this.removeCompletedTimer = null;\n  }\n\n  componentDidMount(){\n    PathManager.on('operationGenerateStart', this.addOperation.bind(this));\n    PathManager.on('operationGenerateStop', this.stopOperation.bind(this));\n  }\n\n  addOperation(operation){\n    this.state.operations.push(operation);\n    this.forceUpdate();\n  }\n\n  stopOperation(operation){\n    clearTimeout(this.removeCompletedTimer);\n\n    this.state.completedOperations.push(this.state.operations.find(op => op.id == operation.id));\n    this.state.operations = this.state.operations.filter(op => op.id != operation.id);\n    this.forceUpdate();\n\n    this.removeCompletedTimer = setTimeout(() => {\n      this.state.completedOperations = [];\n    }, 300);\n  }\n\n  cancelOperation(operation){\n\n  }\n\n  get active(){\n    return this.state.operations.length > 0;\n  }\n\n  operationElement(operation){\n    return (\n      <div className=\"pendingOp\">\n        <div>\n          <span>Generating { operation.name }</span>\n          <span onClick={() => this.cancelOperation(operation)}>cancel</span>\n        </div>\n        <div className=\"loadingSpinner\"></div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className={ this.active ? \"PendingOperations active\" :\"PendingOperations inactive\" }> \n        { this.state.operations.map(operation => this.operationElement(operation)) }\n        { this.state.completedOperations.map(operation => this.operationElement(operation)) }\n      </div>\n    );\n  }\n}\n// style={{right: this.state.position}}>\nexport default PendingOperations;\n","import React, { Component } from 'react';\nimport SceneManager from '../../models/scene_manager';\n\nimport './WebglDisplay.css';\n\nclass WebglDisplay extends Component {\n  componentDidMount() {\n    window.onresize = this.resizeCanvas.bind(this);\n\n    SceneManager.init(this.canvasElement);\n    this.resizeCanvas();\n  }\n\n  resizeCanvas(){\n    this.canvasElement.style.width = '100%';\n    this.canvasElement.style.height= '100%';\n    this.canvasElement.width = this.canvasElement.offsetWidth;\n    this.canvasElement.height = this.canvasElement.offsetHeight;\n\n    SceneManager.onWindowResize();\n  }\n\n  render() {\n    return (\n      <canvas\n        className=\"WebglDisplay\"\n        ref={element => this.canvasElement = element}\n      />\n    );\n  }\n}\n\nexport default WebglDisplay;\n","import React, { Component } from 'react';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport PendingOperations from './components/PendingOperations/PendingOperations';\nimport WebglDisplay from './components/WebglDisplay/WebglDisplay';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Sidebar />\n        <WebglDisplay />\n        <PendingOperations />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}