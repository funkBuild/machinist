{"version":3,"sources":["../webpack/bootstrap","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime-module.js","../node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","models/wasmSimWorker/simulation.js","models/wasm.sim.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","self","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","e","global","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","then","result","done","toString","keys","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","error","return","TypeError","info","pushTryEntry","locs","iteratorMethod","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","delay","res","setTimeout","Simulation","worker","pathBuffer","updateInterval","simCore","totalSegments","running","startPolygonEmitter","runSegment","stopPolygonEmitter","_this","_polygoneEmitter","setInterval","polygonBuffer","getPolygons","sendPolygonUpdate","clearInterval","sOffset","fOffset","start","x","y","z","end","segmentNumber","getSegment","deltas","position","totalSteps","Math","sqrt","step","toolCollision","importScripts","process","Module","onRuntimeInitialized","_class","onmessage","onMessage","postMessage","message","data","action","initSimulation","setSimTool","doToolCollision","getSimPolygons","runOperationSimulation","console","log","_initSimulation","regenerator_default","a","_callee","_ref","id","params","stock","_context","SimulateCore","size","_x","_setSimTool","_callee2","_ref2","_context2","setTool","tool","_x2","_getSimPolygons","_callee3","_ref3","polygons","_context3","_x3","_doToolCollision","_callee4","_ref4","_context4","toolPosition","_x4","_runOperationSimulation","_callee5","_ref5","duration","_context5","Date","now","simulation","run","concat","_x5","_sendPolygonUpdate","_callee6","_context6","event","_x6"],"mappings":"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","file":"4d3871fabf96ed121003.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/machinist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const POSITION_RESOLUTION = 0.1;\n\nfunction delay(t){\n  return new Promise( res => setTimeout(res, t));\n}\n\nclass Simulation {\n  constructor(worker, pathBuffer, updateInterval){\n    this.worker = worker;\n    this.simCore = worker.simCore;\n    this.pathBuffer = pathBuffer;\n    this.updateInterval = updateInterval;\n    this.totalSegments = this.pathBuffer.length / 4;\n    this.running = false;\n  }\n\n  async run(){\n    this.startPolygonEmitter();\n\n    for(let i = 0; i < this.totalSegments; i++){\n      await this.runSegment(i);\n    }\n\n    this.stopPolygonEmitter();\n  }\n\n  startPolygonEmitter(){\n    this._polygoneEmitter = setInterval(() => {\n      let polygonBuffer = this.simCore.getPolygons();\n      this.worker.sendPolygonUpdate(polygonBuffer);\n    }, this.updateInterval);\n  }\n\n  stopPolygonEmitter(){\n    clearInterval(this._polygoneEmitter);\n  }\n\n  getSegment(i){\n    let sOffset = 4 * (i - 1);\n    let fOffset = 4 * i;\n\n    return {\n      start: {\n        x: this.pathBuffer[sOffset + 1],\n        y: this.pathBuffer[sOffset + 2],\n        z: this.pathBuffer[sOffset + 3]\n      },\n      end: {\n        x: this.pathBuffer[fOffset + 1],\n        y: this.pathBuffer[fOffset + 2],\n        z: this.pathBuffer[fOffset + 3]\n      }\n    }\n  }\n\n  async runSegment(segmentNumber){\n    let {start, end} = this.getSegment(segmentNumber);\n\n    let deltas = {\n      x: end.x - start.x,\n      y: end.y - start.y,\n      z: end.z - start.z\n    }\n    let position = {\n      x: start.x,\n      y: start.y,\n      z: start.z,\n    }\n\n    // Distance / resolution\n    let totalSteps = Math.sqrt(deltas.x*deltas.x + deltas.y*deltas.y + deltas.z*deltas.z) / POSITION_RESOLUTION;\n\n    deltas.x /= totalSteps;\n    deltas.y /= totalSteps;\n    deltas.z /= totalSteps;\n\n    for(let step = 0; step < totalSteps; step++){\n      position.x += deltas.x;\n      position.y += deltas.y;\n      position.z += deltas.z;\n\n      this.worker.simCore.toolCollision(position);\n\n      await delay(1);\n    };\n  }\n\n  \n}\n\nexport default Simulation;\n","//import 'babel-polyfill';\nimport Simulation from './wasmSimWorker/simulation.js'\n\nself.importScripts(process.env.PUBLIC_URL + '/main.js');\n\nModule.onRuntimeInitialized = () => {\n  const Worker = new class {\n    constructor(){\n      onmessage = this.onMessage.bind(this);\n      postMessage({ type: 'ready' });\n    }\n\n    onMessage(e) {\n      let message = e.data;\n\n      switch(message.action) {\n        case 'initSimulation':\n          this.initSimulation(message);\n          break;\n        case 'setTool':\n          this.setSimTool(message);\n          break;\n        case 'toolCollision':\n          this.doToolCollision(message);\n          break;\n        case 'getSimPolygons':\n          this.getSimPolygons(message);\n          break;\n        case 'runOperationSimulation':\n          this.runOperationSimulation(message);\n          break;\n        default:\n          console.log('Unknown message type');\n      }\n    }\n\n    async initSimulation({id, params}) {\n      let stock = params.stock;\n      this.simCore = new Module.SimulateCore(stock.size.x, stock.size.y, stock.size.z);\n\n      postMessage({\n        id,\n        params: {}\n      });       \n    }\n\n    async setSimTool({id, params}) {\n      this.simCore.setTool(params.tool);\n\n      postMessage({\n        id,\n        params: {}\n      });\n    }\n\n    async getSimPolygons({id}) {\n      let polygons = this.simCore.getPolygons();\n\n      postMessage({\n        id,\n        params: polygons\n      });       \n    }\n\n    async doToolCollision({id, params}) {\n      this.simCore.toolCollision(params.toolPosition);\n\n      postMessage({\n        id,\n        params: {}\n      });\n    }\n\n    async runOperationSimulation({id, params}){\n      let start = Date.now();\n\n      this.simCore.setTool(params.tool);\n\n      postMessage({\n        id,\n        params: {}\n      });\n\n      this.simulation = new Simulation(this, params.pathBuffer, params.updateInterval);\n\n      await this.simulation.run();\n\n      let duration = Date.now() - start;\n      console.log(`Sim done in ${duration} ms`);\n\n      postMessage({\n        type: 'simFinished',\n        params: {}\n      });\n    }\n\n    async sendPolygonUpdate(polygonBuffer) {\n      postMessage({\n        event: 'polygonUpdate',\n        params: {\n          polygonBuffer\n        }\n      });       \n    }\n    \n  }\n};\n\n\n\n\n"],"sourceRoot":""}